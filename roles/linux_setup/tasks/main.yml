---

- name: "Update cache"
  ansible.builtin.apt:
    update_cache: true

- name: "Install psql-dependencies"
  ansible.builtin.apt:
    pkg:
      - curl
      - gpg
      - gnupg2
      - software-properties-common
      - apt-transport-https
      - lsb-release
      - ca-certificates
    state: "present"
  become: true

- name: "Pull postgres repository"
  ansible.builtin.shell: "curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg"

- name: "Add repo contents"
  ansible.builtin.shell: "echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" |sudo tee  /etc/apt/sources.list.d/pgdg.list"

- name: "Update cache"
  ansible.builtin.apt:
    update_cache: true


- name: Install psql
  ansible.builtin.apt:
    pkg:
      - postgresql-13
      - postgresql-client-13
    state: present
  become: true

- name: Install tmux
  ansible.builtin.apt:
    name: tmux
    state: present
  become: true

- name: Install tldr
  ansible.builtin.apt:
    name: tldr
    state: present
  become: true

- name: Install nvim build prerequisites
  ansible.builtin.apt:
    pkg:
      - ninja-build
      - gettext
      - cmake
      - unzip
      - curl
    state: present
    force_apt_get: true
  become: true

- name: Checkout neovim
  ansible.builtin.git:
    repo: https://github.com/neovim/neovim
    dest: "{{ defaults.home }}/neovim"
    version: stable
    force: true

- name: Install neovim
  shell:
    cmd: 'rm -r build'
    chdir: "{{ defaults.home }}/neovim"

- name: Make cmake shit
  community.general.make:
    target: install
    chdir: "{{ defaults.home }}/neovim"
    params:
      CMAKE_EXTRA_FLAGS: "-DCMAKE_INSTALL_PREFIX={{ defaults.home }}/neovim"

- name: export neovim to path
  shell:
    cmd: 'export PATH=$HOME/neovim/bin:$PATH'

- name: Export neovim to path
  ansible.builtin.shell:
    cmd: 'export PATH=$HOME/neovim/nvim-linux64/bin:$PATH'

- name: Install ghcup required packages
  ansible.builtin.apt:
    pkg:
      - build-essential
      - curl
      - libffi-dev
      - libffi8ubuntu1
      - libgmp-dev
      - libgmp10
      - libncurses-dev
      - libncurses5
      - libtinfo5
      - libpq-dev
    state: present
    force_apt_get: true
  become: true

- name: Install ghcup
  ansible.builtin.shell: 'curl --proto =https --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_GHC_VERSION=8.8.4 BOOTSTRAP_HASKELL_CABAL_VERSION=latest BOOTSTRAP_HASKELL_INSTALL_STACK=1 BOOTSTRAP_HASKELL_INSTALL_HLS=1 BOOTSTRAP_HASKELL_ADJUST_BASHRC=P sh'

- name: Install docker dependencies
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: true
    force_apt_get: true

- name: Add GPG Key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"

- name: Add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

- name: Install Docker
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true
    force_apt_get: true
